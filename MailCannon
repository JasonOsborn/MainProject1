`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company:
// Engineer:
//
// Create Date: 03/25/2019 10:58:34 AM
// Design Name:
// Module Name: Motors
// Project Name:
// Target Devices:
// Tool Versions:
// Description:
//
// Dependencies:
//
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
//
//////////////////////////////////////////////////////////////////////////////////


module Motors(input clk, input IR_right, input IR_left, input [1:0]MailboxNum, output reg MailDelivered, output reg [2:0]MailCounter, output reg [5:0] motor

    );

      reg SoftDelayStart = 0;
      reg SoftDelay = 0;

      always@(posedge clk) begin

          if (IR_right) begin

               if (MailboxNum[0]) begin
                  motor = 6'b000001;
                  SoftDelayStart = 1;
               end

               else if(MailboxNum[1]) begin
                  motor = 6'b000100;
                  SoftDelayStart = 1;
               end

               else if(MailboxNum[2]) begin
                    motor = 6'b010000;
                    SoftDelayStart = 1;
               end

          end

          else if (IR_left) begin
             if (MailboxNum[0]) begin
                motor = 6'b000010;
                SoftDelayStart = 1;
             end

             else if(MailboxNum[1]) begin
                motor = 6'b001000;
                SoftDelayStart = 1;
             end

             else if(MailboxNum[2]) begin
               motor = 6'b100000;
               SoftDelayStart = 1;
             end
          end

      end

      always@(posedge clk) begin
                if (SoftDelayStart) begin
                    while (SoftDelay < 100_000_000)
                        SoftDelay = SoftDelay + 1;
                    SoftDelay = 0;
                    SoftDelayStart = 0;
                    motor = 0;
                    MailDelivered = 1;
                end

      end



endmodule
